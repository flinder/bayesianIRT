data {
  int<lower=1> J; // number of students
  int<lower=1> K; // number of questions
  int<lower=1> N; // number of observations
  int<lower=1,upper=J> jj[N]; // student for observation n
  int<lower=1,upper=K> kk[N]; // question for observation n
  int<lower=0,upper=1> Y[N]; // correctness for observation n
}

parameters {
  real delta; // mean student ability
  real theta[J]; // ability for j - mean
  real beta[K]; // difficulty for k
  real alpha[K]; // discrimination of k
  real<lower=0> sigma_theta; // scale of abilities
  real<lower=0> sigma_beta; // scale of difficulties
  real<lower=0> sigma_alpha; // scale of log discrimination
}

model {
  theta ~ normal(0,sigma_theta);
  beta ~ normal(0,sigma_beta);
  alpha ~ normal(0,sigma_alpha);
  delta ~ cauchy(0,5);
  sigma_theta ~ cauchy(0,5);
  sigma_beta ~ cauchy(0,5);
  sigma_alpha ~ cauchy(0,5);
  for (n in 1:N)
    Y[n] ~ bernoulli_logit(exp(alpha[kk[n]]) 
	                       * (theta[jj[n]] - beta[kk[n]] + delta) );
}
